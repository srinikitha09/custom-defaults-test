#Project Setup
general:
  unsafeMode: false
  productiveBranch: master
  collectTelemetryData: true
  defaultNode: ""
  jenkinsKubernetes:
    jnlpAgent: 'jenkins/jnlp-slave:4.0.1-1'
    securityContext:
      runAsUser: 1000
      fsGroup: 1000 
  automaticVersioning: true
  runStageInPod: true
  maven:
    m2Path: s4hana_pipeline/maven_local_repo
  mandatoryStages:
    - "initS4sdkPipeline"
    - "build"
    - "backendIntegrationTests"
    - "staticCodeChecks"
    - "unitTests"
    - "npmAudit"
    - "lint"
    - "frontendUnitTests"
    - "frontendIntegrationTests"
    - "s4SdkQualityChecks"
    - "artifactDeployment"
    - "productionDeployment"

#Steps Specific Configuration
steps:
  piperStageWrapper:
    globalExtensionsDirectory: 's4hana_pipeline/extensions/'
    stageLocking: false
    stashContent: []

  artifactSetVersion:
    gitCredentialsId: ""
    commitVersion: false
    buildTool: "maven"
    timestampTemplate: "%Y-%m-%dT%H%M%S%Z"

  mavenExecute:
    dockerImage: maven@sha256:c54c4cbf2b0dde00036c48e5680892a91a316b29842112ad0cb1474ff9678e64
    dockerOptions: ""

  executeNpm:
    dockerImage: ppiper/node-browsers@sha256:1474483498ff6bbcb0fe350bc01c6aa00a04b3cf4518f44ac5dea300b004b611
    sapNpmRegistry: "https://npm.sap.com"

  executeGradle:
    dockerImage: gradle:6.0.0-jdk8

  executeSourceClearScan:
    dockerImage: ppiper/mta-archive-builder:v1

  checkFindbugs:
    includeFilterFile: s4hana_findbugs_include_filter.xml
    scanModules:
      - "application"

  createHdiContainer:
    dockerImage: 'ppiper/cf-cli@sha256:c25dbacb9ab6e912afe0fe926d8f9d949c60adfe55d16778bde5941e6c37be11'

  checkPmd:
    scanModules:
      - "application"

  checkJMeter:
    dockerImage: famiko/jmeter-base
    testPlan: ./performance-tests/*
    reportDirectory: /jmeter-report
    failThreshold: 100
    unstableThreshold: 90

  cloudFoundryDeploy:
    dockerImage: 'ppiper/cf-cli@sha256:c25dbacb9ab6e912afe0fe926d8f9d949c60adfe55d16778bde5941e6c37be11'
    keepOldInstance: true
    stashContent: []

  cloudFoundryCreateService:
    stashContent: []

  neoDeploy:
    dockerImage: ppiper/neo-cli:v2
    deployMode: "warParams"
    neoHome: "/sdk"

  mtaBuild:
    buildTarget: "CF"
    mtaBuildTool: "cloudMbt"
    #TODO Workarround to build containers map. Can be removed after init of containers map is fixed for go.
    classic:
      dockerImage: 'ppiper/mta-archive-builder:v1'
    cloudMbt:
      dockerImage: 'devxci/mbtci@sha256:c6830958426bc4ec1fde97246b55ca8d168fbec4d97c96d6786f5b2e1c7eb0b3'

  checkFrontendCodeCoverage:
    codeCoverageFrontend:
      unstable: 0
      failing: 0

  tmsUpload:
    namedUser: "CLOUD_SDK_PIPELINE"

  sonarExecuteScan:
    dockerImage: 'ppiper/node-browsers:v3'

#Stage Specific Configurations
stages:
  backendIntegrationTests:
    retry: 1
    forkCount: 1C

  endToEndTests:
    enableZeroDowntimeDeployment: false
    onlyRunInProductiveBranch: false

  checkmarxScan:
    filterPattern: "!**/*.log, !**/*.lock, !**/*.json, !**/*.html, !**/Cx*, !**/test/**, !s4hana_pipeline/**, !**/unit-tests/**, !**/integration-tests/**, !**/frontend-unit-tests/**, !**/e2e-tests/**, !**/performance-tests/**, **/*.js, **/*.java, **/*.ts"
    fullScansScheduled: true
    generatePdfReport: true
    incremental: true
    preset: "36"
    vulnerabilityThresholdLow: 99999
    vulnerabilityThresholdMedium: 0

  artifactDeployment:
    nexus:
      version: nexus3

  s4SdkQualityChecks:
    disabledChecks: []
